package de.adis_portal.server.reporting.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReportDistributionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDistributionAllPropertiesEquals(ReportDistribution expected, ReportDistribution actual) {
        assertReportDistributionAutoGeneratedPropertiesEquals(expected, actual);
        assertReportDistributionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDistributionAllUpdatablePropertiesEquals(ReportDistribution expected, ReportDistribution actual) {
        assertReportDistributionUpdatableFieldsEquals(expected, actual);
        assertReportDistributionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDistributionAutoGeneratedPropertiesEquals(ReportDistribution expected, ReportDistribution actual) {}

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDistributionUpdatableFieldsEquals(ReportDistribution expected, ReportDistribution actual) {
        assertThat(expected)
            .as("Verify ReportDistribution relevant properties")
            .satisfies(e -> assertThat(e.getRid()).as("check rid").isEqualTo(actual.getRid()))
            .satisfies(e -> assertThat(e.getEmail()).as("check email").isEqualTo(actual.getEmail()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDistributionUpdatableRelationshipsEquals(ReportDistribution expected, ReportDistribution actual) {
        assertThat(expected)
            .as("Verify ReportDistribution relationships")
            .satisfies(e -> assertThat(e.getReport()).as("check report").isEqualTo(actual.getReport()));
    }
}
