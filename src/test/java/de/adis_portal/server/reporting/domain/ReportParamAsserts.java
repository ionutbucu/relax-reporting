package de.adis_portal.server.reporting.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReportParamAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportParamAllPropertiesEquals(ReportParam expected, ReportParam actual) {
        assertReportParamAutoGeneratedPropertiesEquals(expected, actual);
        assertReportParamAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportParamAllUpdatablePropertiesEquals(ReportParam expected, ReportParam actual) {
        assertReportParamUpdatableFieldsEquals(expected, actual);
        assertReportParamUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportParamAutoGeneratedPropertiesEquals(ReportParam expected, ReportParam actual) {}

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportParamUpdatableFieldsEquals(ReportParam expected, ReportParam actual) {
        assertThat(expected)
            .as("Verify ReportParam relevant properties")
            .satisfies(e -> assertThat(e.getRid()).as("check rid").isEqualTo(actual.getRid()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getValue()).as("check value").isEqualTo(actual.getValue()))
            .satisfies(e -> assertThat(e.getConversionRule()).as("check conversionRule").isEqualTo(actual.getConversionRule()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportParamUpdatableRelationshipsEquals(ReportParam expected, ReportParam actual) {
        assertThat(expected)
            .as("Verify ReportParam relationships")
            .satisfies(e -> assertThat(e.getReport()).as("check report").isEqualTo(actual.getReport()));
    }
}
