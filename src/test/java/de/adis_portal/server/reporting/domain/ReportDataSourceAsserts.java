package de.adis_portal.server.reporting.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReportDataSourceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDataSourceAllPropertiesEquals(ReportDataSource expected, ReportDataSource actual) {
        assertReportDataSourceAutoGeneratedPropertiesEquals(expected, actual);
        assertReportDataSourceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDataSourceAllUpdatablePropertiesEquals(ReportDataSource expected, ReportDataSource actual) {
        assertReportDataSourceUpdatableFieldsEquals(expected, actual);
        assertReportDataSourceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDataSourceAutoGeneratedPropertiesEquals(ReportDataSource expected, ReportDataSource actual) {
        assertThat(expected)
            .as("Verify ReportDataSource auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDataSourceUpdatableFieldsEquals(ReportDataSource expected, ReportDataSource actual) {
        assertThat(expected)
            .as("Verify ReportDataSource relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()))
            .satisfies(e -> assertThat(e.getUser()).as("check user").isEqualTo(actual.getUser()))
            .satisfies(e -> assertThat(e.getPassword()).as("check password").isEqualTo(actual.getPassword()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReportDataSourceUpdatableRelationshipsEquals(ReportDataSource expected, ReportDataSource actual) {}
}
